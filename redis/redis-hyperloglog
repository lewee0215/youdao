# Redis HyperLogLog
https://www.cnblogs.com/linguanh/p/10460421.html

## 伯努利试验  
> 硬币拥有正反两面，一次的上抛至落下，最终出现正反面的概率都是50%。假设一直抛硬币，直到它出现正面为止，我们记录为一次完整的试验，间中可能抛了一次就出现了正面，也可能抛了4次才出现正面。无论抛了多少次，只要出现了正面，就记录为一次试验。这个试验就是伯努利试验  

那么对于多次的伯努利试验，假设这个多次为n次。就意味着出现了n次的正面。假设每次伯努利试验所经历了的抛掷次数为k。第一次伯努利试验，次数设为k1，以此类推，第n次对应的是kn。

其中，对于这n次伯努利试验中，必然会有一个最大的抛掷次数k，例如抛了12次才出现正面，那么称这个为k_max，代表抛了最多的次数。

伯努利试验容易得出有以下结论：
1. n 次伯努利过程的投掷次数都不大于 k_max。
2. n 次伯努利过程，至少有一次投掷次数等于 k_max

<font color='#dcdcaa'>
最终结合极大似然估算的方法，发现在n和k_max中存在估算关联：n = 2^(k_max)
</font>

> 示例  
> 第一次试验: 抛了3次才出现正面，此时 k=3，n=1  
> 第二次试验: 抛了2次才出现正面，此时 k=2，n=2  
> 第三次试验: 抛了6次才出现正面，此时 k=6，n=3  
> 第n 次试验：抛了12次才出现正面，此时我们估算， n = 2^12  

假设上面例子中实验组数共3组，那么 k_max = 6，最终实验总次数 n=3，  
根据估算公式中去，明显： 3 ≠ 2^6 。也即是说，当试验次数很小的时候，这种估算方法的误差是很大的。

## HyperLogLog 算法之 JAVA 实现
https://www.jianshu.com/p/55defda6dcd2
